import configparser
import os
import resource
import shutil
import socket
import sys
import tempfile

from fc.ceph.util import find_lv_path, find_vg_for_mon, kill, mount_status, run


class Manager(object):
    def __init__(self):
        self.id = socket.gethostname()
        self.mgr_dir = f"/srv/ceph/mgr/ceph-{self.id}"
        self.pid_file = f"/run/ceph/mgr.{self.id}.pid"
        self.mgr_key_template = f"/etc/ceph/ceph.mgr.{self.id}.keyring"

    def activate(self):
        print(f"Activating MGR {self.id}...")
        resource.setrlimit(resource.RLIMIT_NOFILE, (270000, 270000))

        if not mount_status(self.mgr_dir):
            run.mount(
                # fmt: off
                "-t", "xfs", "-o", "defaults,nodev,nosuid",
                "LABEL=ceph-mgr", self.mgr_dir,
                # fmt: on
            )
        print(f"Activating MGR {self.id}...")
        run.ceph_mgr("-i", self.id, "--pid-file", self.pid_file)

    def deactivate(self):
        print(f"Stopping MGR {self.id} ...")
        kill(self.pid_file)

    def reactivate(self):
        try:
            self.deactivate()
        except Exception:
            pass
        self.activate()

    def create(self, size="8g", lvm_vg=None):
        print(f"Creating MGR {self.id}...")

        if os.path.exists(self.mgr_dir):
            print(
                "There already exists a MGR dir. "
                "Please destroy existing MGR data first."
            )
            sys.exit(1)

        if not os.path.exists(self.mgr_dir):
            os.makedirs(self.mgr_dir)

        if not lvm_vg:
            try:
                lvm_vg = find_vg_for_mon()
            except IndexError:
                print(
                    "Could not find a journal VG. Please prepare a journal "
                    "VG first using `fc-ceph osd prepare-journal`."
                )
                sys.exit(1)

        lvm_lv = "ceph-mgr"
        lvm_data_device = f"/dev/{lvm_vg}/{lvm_lv}"

        print(f"creating new MGR volume {lvm_data_device}")
        run.lvcreate("-n", lvm_lv, f"-L{size}", lvm_vg)
        run.mkfs_xfs("-L", lvm_lv, "-m", "crc=1,finobt=1", lvm_data_device)
        run.mount(
            # fmt: off
            "-t", "xfs",
            "-o", "defaults,nodev,nosuid",
            "LABEL=ceph-mgr", self.mgr_dir,
            # fmt: on
        )

        # key has already been pre-generated by KeyManager activation script hook
        shutil.copy(
            self.mgr_key_template, os.path.join(self.mgr_dir, "keyring")
        )

        run.systemctl("start", "fc-ceph-mgr")

    def destroy(self):
        try:
            lvm_data_device = find_lv_path("ceph-mgr")
        except ValueError:
            lvm_data_device = None

        run.systemctl("stop", "fc-ceph-mgr")
        try:
            self.deactivate()
        except Exception:
            pass

        run.umount(self.mgr_dir)

        if lvm_data_device:
            run.wipefs("-q", "-a", lvm_data_device, check=False)
            run.lvremove("-f", lvm_data_device, check=False)

        os.rmdir(self.mgr_dir)
