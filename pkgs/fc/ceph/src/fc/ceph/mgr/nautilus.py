import os
import resource
import shutil
import socket

from fc.ceph.lvm import XFSVolume
from fc.ceph.mon.nautilus import find_vg_for_mon
from fc.ceph.util import console, kill, run


class Manager(object):
    def __init__(self):
        self.id = socket.gethostname()
        self.volume = XFSVolume("ceph-mgr", f"/srv/ceph/mgr/ceph-{self.id}")

        self.pid_file = f"/run/ceph/mgr.{self.id}.pid"
        self.mgr_key_template = f"/etc/ceph/ceph.mgr.{self.id}.keyring"

    def activate(self):
        console.print(f"Activating MGR {self.id}...", style="bold")
        resource.setrlimit(resource.RLIMIT_NOFILE, (270000, 270000))
        self.volume.activate()
        run.ceph_mgr("-i", self.id, "--pid-file", self.pid_file)

    def deactivate(self):
        console.print(f"Stopping MGR {self.id} ...", style="bold")
        kill(self.pid_file)

    def reactivate(self):
        try:
            self.deactivate()
        except Exception:
            pass
        self.activate()

    def create(self, size="8g", lvm_vg=None, encrypt: bool = False):
        console.print(f"Creating MGR {self.id}...", style="bold")

        if not lvm_vg:
            lvm_vg = find_vg_for_mon()
        self.volume.create(lvm_vg, size, encrypt=encrypt)

        # key has already been pre-generated by KeyManager activation script hook
        shutil.copy(
            self.mgr_key_template,
            os.path.join(self.volume.mountpoint, "keyring"),
        )

        run.systemctl("start", "fc-ceph-mgr")

    def destroy(self):
        console.print(f"Destroying MGR {self.id}...", style="bold")

        try:
            run.systemctl("stop", "fc-ceph-mgr")
        except Exception:
            pass

        try:
            self.deactivate()
        except Exception:
            pass

        self.volume.purge(lv_only=True)
